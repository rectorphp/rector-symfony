parameters:
    level: 8

    reportUnmatchedIgnoredErrors: false

    paths:
        - config
        - src
        - tests

    cognitive_complexity:
        class: 40
        function: 10

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - */tests/*/Fixture*/Expected/*

    ignoreErrors:
        -
             message: '#Instead of "instanceof/is_a\(\)" use ReflectionProvider service or "\(new ObjectType\(<desired_type\>\)\)\-\>isSuperTypeOf\(<element_type\>\)" for static reflection to work#'
             path: src/ValueObjectFactory/ServiceMapFactory.php

        - '#Cognitive complexity for "Rector\\Symfony\\Rector\\Closure\\MinimalSharedStringSolver\:\:solve\(\)" is (.*?), keep it under 10#'

        -
            path: "src/ValueObjectFactory/ServiceMapFactory.php"
            message: '#@simplexml_load_string(.*?) is forbidden to use#'

        # known array
        -
            message: '#Parameter \#2 \$name of method Rector\\Doctrine\\NodeAnalyzer\\AttrinationFinder\:\:hasByOne\(\) expects class\-string, string given#'
            path: src/Rector/ClassMethod/ResponseReturnTypeControllerActionRector.php

        - '#Calling PHPStan\\Reflection\\Php\\PhpParameterReflection\:\:getName\(\) is not covered by backward compatibility promise\. The method might change in a minor PHPStan version#'

        # false positive
        - '#Access to an undefined property Rector\\Core\\Contract\\PhpParser\\Node\\StmtsAwareInterface\:\:\$stmts#'
        - '#but class PhpParser\\Node\\Stmt\\Expression is not generic#'

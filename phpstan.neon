parameters:
    level: 8

    paths:
        - config
        - src
        - tests

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - */Source*/*
        - *Source/*

    reportUnmatchedIgnoredErrors: false

    ignoreErrors:
        # @todo update in rules package
        -
             message: '#Instead of "instanceof/is_a\(\)" use ReflectionProvider service or "\(new ObjectType\(<desired_type\>\)\)\-\>isSuperTypeOf\(<element_type\>\)" for static reflection to work#'
             path: src/ValueObjectFactory/ServiceMapFactory.php

        -
            message: '#Function "class_implements\(\)" cannot be used/left in the code#'
            path:  src/ValueObject/ServiceMap/ServiceMap.php

        - '#Method Rector\\Symfony\\Rector\\Property\\JMSInjectPropertyToConstructorInjectionRector\:\:resolveServiceType\(\) has parameter \$phpDocInfo with generic class Rector\\BetterPhpDocParser\\PhpDocInfo\\PhpDocInfo but does not specify its types\: TNode#'

        - '#Parameter \#1 \$class of method Rector\\BetterPhpDocParser\\PhpDocInfo\\PhpDocInfo<PHPStan\\PhpDocParser\\Ast\\Node\>\:\:(.*?)\(\) expects class\-string, string given#'

        # allowed on null-safe calls
        -
            message: '#Do not use chained method calls\. Put each on separated lines#'
            path: src/Helper/TemplateGuesser.php

        # rector co-variant
        - '#Parameter \#1 \$node \(PhpParser\\Node\\(.*?) of method Rector\\(.*?)\(\) should be contravariant with parameter \$node \(PhpParser\\Node\) of method Rector\\Core\\Contract\\Rector\\PhpRectorInterface\:\:refactor\(\)#'


        # generics false positive
        - '#Method Rector\\Symfony\\Rector\\ClassMethod\\RenderMethodParamToTypeDeclarationRector\:\:refactorParam\(\) has parameter \$phpDocInfo with generic class Rector\\BetterPhpDocParser\\PhpDocInfo\\PhpDocInfo but does not specify its types\: TNode#'
